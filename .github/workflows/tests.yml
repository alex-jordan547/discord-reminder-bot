name: Tests et Validation

on:
  push:
    branches: [ * ]
  pull_request:
    branches: [ main, preprod ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 21]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Type checking
      run: npm run type-check:strict

    - name: Linting
      run: npm run lint:strict

    - name: Format check
      run: npm run format:check

    - name: Security audit
      run: npm run security:audit

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.node-version == 20
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  performance-tests:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run performance tests
      run: npm run test:performance

  regression-tests:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' && contains(github.head_ref, 'release/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run regression tests
      run: npm run test:regression

  database-tests:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup test database
      run: |
        npm run db:generate
        npm run db:migrate

    - name: Run database tests
      run: npm run test -- tests/db/ tests/persistence/

    - name: Clean up
      run: rm -f discord_bot.db*
