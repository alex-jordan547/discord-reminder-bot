[tool:pytest]
# Configuration pytest pour le Discord Reminder Bot

# Répertoires de tests
testpaths = tests

# Motifs de fichiers de tests
python_files = test_*.py *_test.py

# Motifs de classes de tests
python_classes = Test*

# Motifs de fonctions de tests
python_functions = test_*

# Marqueurs personnalisés
markers =
    unit: Tests unitaires rapides
    integration: Tests d'intégration
    functional: Tests fonctionnels end-to-end
    slow: Tests lents (> 5 secondes)
    database: Tests nécessitant une base de données
    discord: Tests nécessitant des objets Discord mockés

# Options par défaut
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --durations=10
    --color=yes
    --asyncio-mode=auto
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml

# Filtres d'avertissements
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:discord.*

# Configuration pour les tests async (pytest-asyncio)
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Répertoires à ignorer
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    __pycache__
    .venv
    venv
    node_modules

# Minimum de couverture de code requis (objectif 90%)
--cov-fail-under=90

# Configuration de logging pour les tests
log_cli = false
log_cli_level = ERROR
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Désactiver les warnings de cache
cache_dir = .pytest_cache