#!/bin/bash

# Script de test isol√© qui prot√®ge votre base de donn√©es de d√©veloppement
# Usage: ./scripts/test-isolated.sh [fichier-de-test-optionnel]

echo "üîí D√©marrage des tests isol√©s..."

# Sauvegarde de la base de donn√©es actuelle
DB_FILE="discord_bot.db"
BACKUP_FILE="${DB_FILE}.backup-$(date +%Y%m%d-%H%M%S)"

if [ -f "$DB_FILE" ]; then
    echo "üì¶ Sauvegarde de la base de donn√©es: $BACKUP_FILE"
    cp "$DB_FILE" "$BACKUP_FILE"
fi

# Renomme temporairement la base de donn√©es de production
if [ -f "$DB_FILE" ]; then
    mv "$DB_FILE" "${DB_FILE}.temp"
fi

# Force l'utilisation de la base en m√©moire
export NODE_ENV=test
export DATABASE_PATH=":memory:"
export DATABASE_NAME=":memory:"

echo "üß™ Ex√©cution des tests avec base de donn√©es en m√©moire..."

# Lance les tests
if [ -z "$1" ]; then
    npm run test
else
    npm run test -- "$1"
fi

TEST_EXIT_CODE=$?

# Restaure la base de donn√©es de production
if [ -f "${DB_FILE}.temp" ]; then
    mv "${DB_FILE}.temp" "$DB_FILE"
fi

# Supprime la sauvegarde si les tests ont r√©ussi
if [ $TEST_EXIT_CODE -eq 0 ] && [ -f "$BACKUP_FILE" ]; then
    rm "$BACKUP_FILE"
    echo "‚úÖ Tests r√©ussis, sauvegarde supprim√©e"
else
    echo "‚ö†Ô∏è  Sauvegarde conserv√©e: $BACKUP_FILE"
fi

echo "üîì Tests termin√©s avec code de sortie: $TEST_EXIT_CODE"
exit $TEST_EXIT_CODE
